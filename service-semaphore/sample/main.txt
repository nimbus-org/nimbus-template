import java.util.*;
import java.text.*;

import jp.ossc.nimbus.core.*;
import jp.ossc.nimbus.service.semaphore.*;

final Semaphore semaphore = ServiceManagerFactory.getServiceObject("Sample.Service.Semaphore", "Semaphore");

Thread[] threads = new Thread[5];
SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
for(int i = 0; i < threads.length; i++){
    final int id = i + 1;
    class Runner implements Runnable{
        public void run(){
            print(format.format(new Date()) + " : " + id + " : リソース取得要求");
            try{
                if(semaphore.getResource()){
                    print(format.format(new Date()) + " : " + id + " : リソース取得");
                    Thread.sleep(1000 * id);
                }
            }catch(InterruptedException e){
            }finally{
                print(format.format(new Date()) + " : " + id + " : リソース解放");
                semaphore.freeResource();
            }
        }
    };
    threads[i] = new Thread(new Runner());
}

for(int i = 0; i < threads.length; i++){
    threads[i].start();
}

for(int i = 0; i < threads.length; i++){
    threads[i].join();
}

return "終了";