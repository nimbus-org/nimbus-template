<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server PUBLIC
  "-//Nimbus//DTD Nimbus 1.0//JA"
  "http://nimbus.sourceforge.jp/dtd/nimbus-service_1_0.dtd">

<server>
    
    <default-log>
        <debug output="false"/>
        <information output="false"/>
        <warning output="true"/>
        <error output="true"/>
        <fatal output="true"/>
    </default-log>
    
    <manager name="Template.WebServer.Servlet" shutdown-hook="true">
        
        <!-- リクエストパスに応じたInterceptorChainを生成するInterceptorChainFactoryサービス -->
        <service template="Template.Service.AOP#InterceptorChainFactory"
                 instance="template">
            
            <service-property name="Template.WebServer.Servlet.DEFAULT_INTERCEPTOR_CHAIN_LIST_SERVICE_NAME" extends="true">#InterceptorChainList</service-property>
            
            <attribute name="UseThreadLocalInterceptorChain">false</attribute>
            
            <attribute name="DefaultInterceptorChainListServiceName">${Template.WebServer.Servlet.DEFAULT_INTERCEPTOR_CHAIN_LIST_SERVICE_NAME}</attribute>
            <depends>${Template.WebServer.Servlet.DEFAULT_INTERCEPTOR_CHAIN_LIST_SERVICE_NAME}</depends>
            
        </service>
        
        <!-- 連鎖させるInterceptorのリストを構成するInterceptorChainListサービス -->
        <service template="Template.Service.AOP#InterceptorChainList"
                 instance="template">
            
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.PROCESS_CHECK_INTERCEPTOR_SERVICE_NAME">#RequestProcessCheckInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.ALL_REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME">#HttpServletRequestMetricsInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.SET_CHARACTER_ENC_INTERCEPTOR_SERVICE_NAME">#SetCharacterEncodingInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.THREAD_CONTEXT_INIT_INTERCEPTOR_SERVICE_NAME">#ThreadContextInitializeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_INIT_INTERCEPTOR_SERVICE_NAME">#ServletRequestInitializeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.ACCESS_JOURNAL_INTERCEPTOR_SERVICE_NAME">#AccessJournalInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_SET_INTERCEPTOR_SERVICE_NAME">#HttpServletResponseSetInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_CACHE_INTERCEPTOR_SERVICE_NAME">#HttpResponseCacheInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_DEFLATE_INTERCEPTOR_SERVICE_NAME">#HttpServletResponseDeflateInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.PRE_EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME">#ExceptionHandlingInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_CHECK_INTERCEPTOR_SERVICE_NAME">#HttpServletRequestCheckInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.BEANFLOW_SELECT_CHECK_INTERCEPTOR_SERVICE_NAME">#BeanFlowSelectCheckInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME">#HttpServletRequestMetricsInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.URL_CONVERT_INTERCEPTOR_SERVICE_NAME">#HttpServletRequestURLConvertInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_TRANSFER_INTERCEPTOR_SERVICE_NAME">#HttpServletRequestTransferInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_EXCHANGE_INTERCEPTOR_SERVICE_NAME">#ServletRequestExchangeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.STREAM_EXCHANGE_INTERCEPTOR_SERVICE_NAME">#StreamExchangeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME">#ExceptionHandlingInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.BLOCKADE_INTERCEPTOR_SERVICE_NAME">#BlockadeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.AUTHENTICATE_INTERCEPTOR_SERVICE_NAME">#AuthenticateInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.OAUTH2_AUTHENTICATE_INTERCEPTOR_SERVICE_NAME">#OAuth2AuthenticateInterceptor</service-property>
            
            <attribute name="InterceptorServiceNames">
                <object code="jp.ossc.nimbus.core.ServiceName[]">
                    <constructor>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.PROCESS_CHECK_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.PROCESS_CHECK_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.ALL_REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.ALL_REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.SET_CHARACTER_ENC_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.SET_CHARACTER_ENC_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.THREAD_CONTEXT_INIT_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.THREAD_CONTEXT_INIT_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_INIT_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.REQUEST_INIT_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.ACCESS_JOURNAL_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.ACCESS_JOURNAL_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_CACHE_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.RESPONSE_CACHE_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_SET_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.RESPONSE_SET_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_DEFLATE_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.RESPONSE_DEFLATE_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.PRE_EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.PRE_EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_CHECK_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.REQUEST_CHECK_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.BEANFLOW_SELECT_CHECK_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.BEANFLOW_SELECT_CHECK_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.URL_CONVERT_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.URL_CONVERT_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_TRANSFER_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.REQUEST_TRANSFER_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_EXCHANGE_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.REQUEST_EXCHANGE_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.STREAM_EXCHANGE_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.STREAM_EXCHANGE_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.BLOCKADE_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.BLOCKADE_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.AUTHENTICATE_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.AUTHENTICATE_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.OAUTH2_AUTHENTICATE_INTERCEPTOR_SERVICE_NAME">
                        <argument type="jp.ossc.nimbus.core.ServiceName">${Template.WebServer.Servlet.InterceptorChainList.OAUTH2_AUTHENTICATE_INTERCEPTOR_SERVICE_NAME}</argument>
</ifdef>
                    </constructor>
                </object>
            </attribute>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.PROCESS_CHECK_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.PROCESS_CHECK_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.ALL_REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.ALL_REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.SET_CHARACTER_ENC_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.SET_CHARACTER_ENC_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.THREAD_CONTEXT_INIT_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.THREAD_CONTEXT_INIT_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_INIT_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.REQUEST_INIT_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.ACCESS_JOURNAL_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.ACCESS_JOURNAL_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_CACHE_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.RESPONSE_CACHE_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_SET_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.RESPONSE_SET_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_DEFLATE_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.RESPONSE_DEFLATE_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.PRE_EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.PRE_EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_CHECK_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.REQUEST_CHECK_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.BEANFLOW_SELECT_CHECK_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.BEANFLOW_SELECT_CHECK_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.URL_CONVERT_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.URL_CONVERT_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_TRANSFER_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.REQUEST_TRANSFER_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_EXCHANGE_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.REQUEST_EXCHANGE_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.STREAM_EXCHANGE_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.STREAM_EXCHANGE_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.BLOCKADE_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.BLOCKADE_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.AUTHENTICATE_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.AUTHENTICATE_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.WebServer.Servlet.InterceptorChainList.OAUTH2_AUTHENTICATE_INTERCEPTOR_SERVICE_NAME">
            <depends>${Template.WebServer.Servlet.InterceptorChainList.OAUTH2_AUTHENTICATE_INTERCEPTOR_SERVICE_NAME}</depends>
</ifdef>
            
        </service>
        
        <!-- リクエストの処理時間をチェックして、長すぎる場合にログを出力するInterceptorサービス -->
        <service template="Template.Service.AOP.Interceptor#RequestProcessCheckInterceptor"
                 instance="template"/>
        
        <!-- リクエストの処理時間統計を取得するInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#HttpServletRequestMetricsInterceptor"
                 instance="template"/>
        
        <!-- リクエストの文字コードを設定するInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#SetCharacterEncodingInterceptor"
                 instance="template"/>
        
        <!-- スレッドコンテキストを初期化するInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#ThreadContextInitializeInterceptor"
                 instance="template"/>
        
        <!-- リクエストを初期化するInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#ServletRequestInitializeInterceptor"
                 instance="template"/>
        
        <!-- アクセスジャーナルを記録するInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#AccessJournalInterceptor"
                 instance="template">
            <attribute name="OutputResponseSession">true</attribute>
            <attribute name="ResponseWrap">true</attribute>
            <attribute name="ResponseBufferedOutput">true</attribute>
            <attribute name="BushingRequestBlock">true</attribute>
        </service>
        
        <!-- レスポンスをキャッシュするInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#HttpResponseCacheInterceptor"
                 instance="template"/>
        
        <!-- レスポンスヘッダ等を設定するInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#HttpServletResponseSetInterceptor"
                 instance="template"/>
        
        <!-- レスポンスを圧縮するInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#HttpServletResponseDeflateInterceptor"
                 instance="template"/>
        
        <!-- 例外処理を振り分けるInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#ExceptionHandlingInterceptor"
                 instance="template"/>
        
        <!-- 例外処理を行うExceptionHandlerサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#ExceptionHandler"
                 instance="template"/>
        
        <!-- HTTPリクエストをチェックするInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#HttpServletRequestCheckInterceptor"
                 instance="template"/>
        
        <!-- リクエストパスに該当する業務フローが存在するかチェックするInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#BeanFlowSelectCheckInterceptor"
                 instance="template"/>
        
        <!-- パスを業務フロー名とみなすBeanFlowSelectorサービス -->
        <service template="Template.Service.BeanControl#BeanFlowSelector"
                 instance="template"/>
        
        <!-- パスと業務フロー名のマッピングを定義するBeanFlowSelectorサービス -->
        <service template="Template.Service.BeanControl#MappingBeanFlowSelector"
                 instance="template"/>
        
        <!-- リクエストURLを編集するInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#HttpServletRequestURLConvertInterceptor"
                 instance="template"/>
        
        <!-- リクエストのプロパティをスレッドコンテキストに移すInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#HttpServletRequestTransferInterceptor"
                 instance="template"/>
        
        <!-- リクエストと入力DTOの交換を行うInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#ServletRequestExchangeInterceptor"
                 instance="template"/>
        
        <!-- リクエスト/レスポンスのストリームと入力DTO/出力DTOの交換を行うInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#StreamExchangeInterceptor"
                 instance="template"/>
        
        <!-- 閉塞制御を行うInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#BlockadeInterceptor"
                 instance="template"/>
        
        <!-- 認証/承認を行うInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#AuthenticateInterceptor"
                 instance="template"/>
        
        <!-- 認証情報をデータベースに永続化するAuthenticateStoreサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#DatabaseAuthenticateStore"
                 instance="template"/>
        
        <!-- 認証情報を共有コンテキストに永続化するAuthenticateStoreサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#SharedContextAuthenticateStore"
                 instance="template"/>
        
        <!-- RESTFulリクエストを処理するRestServerサービス -->
        <service template="Template.Service.REST#RestServer"
                 instance="template"/>
        
        <!-- OAuth2認証/承認を行うInterceptorサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#OAuth2AuthenticateInterceptor"
                 instance="template"/>
        
        <!-- OAuth2スコープ解決を行うサービス -->
        <service template="Template.Service.AOP.Servlet.Interceptor#OAuth2ScopeResolver"
                 instance="template"/>
        
        <!-- OAuth2スコープのマッチを行うサービス -->
        <service template="Template.Service.AOP.Interceptor#OAuth2ScopeMatcher"
                 instance="template"/>
        
    </manager>

</server>