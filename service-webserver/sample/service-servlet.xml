<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server PUBLIC
  "-//Nimbus//DTD Nimbus 1.0//JA"
  "http://nimbus.sourceforge.jp/dtd/nimbus-service_1_0.dtd">

<server>
    
    <manager name="WebServer.Servlet" shutdown-hook="true">
        
        <manager-property name="Template.Service.AOP.Servlet.Interceptor.JOURNAL_SERVICE_NAME">WebServer.AccessJournal#AccessJournal</manager-property>
        <manager-property name="Template.Service.AOP.Servlet.Interceptor.BEANFLOW_SELECTOR_SERVICE_NAME">#BeanFlowSelector</manager-property>
        <manager-property name="Template.Service.AOP.Servlet.Interceptor.BEANFLOW_INVOKER_FAC_SERVICE_NAME">WebServer.Resource.BeanControl#BeanFlowInvokerFactory</manager-property>
        <manager-property name="Template.Service.AOP.Servlet.Interceptor.CODEMASTER_FINDER_SERVICE_NAME">WebServer.Resource#CodeMasterFinder</manager-property>
        
        <service template="Template.WebServer.Servlet#InterceptorChainFactory"/>
        
        <service template="Template.WebServer.Servlet#InterceptorChainList">
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.PROCESS_CHECK_INTERCEPTOR_SERVICE_NAME">#RequestProcessCheckInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.SET_CHARACTER_ENC_INTERCEPTOR_SERVICE_NAME">#SetCharacterEncodingInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.THREAD_CONTEXT_INIT_INTERCEPTOR_SERVICE_NAME">#ThreadContextInitializeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_INIT_INTERCEPTOR_SERVICE_NAME">#ServletRequestInitializeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.ACCESS_JOURNAL_INTERCEPTOR_SERVICE_NAME">#AccessJournalInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_SET_INTERCEPTOR_SERVICE_NAME">#HttpServletResponseSetInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.RESPONSE_DEFLATE_INTERCEPTOR_SERVICE_NAME">#HttpServletResponseDeflateInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.PRE_EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME">#PreExceptionHandlingInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_CHECK_INTERCEPTOR_SERVICE_NAME">#HttpServletRequestCheckInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.BEANFLOW_SELECT_CHECK_INTERCEPTOR_SERVICE_NAME">#BeanFlowSelectCheckInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.REQUEST_METRICS_INTERCEPTOR_SERVICE_NAME">#HttpServletRequestMetricsInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.STREAM_EXCHANGE_INTERCEPTOR_SERVICE_NAME">#StreamExchangeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.EXCEPTION_HANDLING_INTERCEPTOR_SERVICE_NAME">#ExceptionHandlingInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.BLOCKADE_INTERCEPTOR_SERVICE_NAME">#BlockadeInterceptor</service-property>
            <service-property name="Template.WebServer.Servlet.InterceptorChainList.AUTHENTICATE_INTERCEPTOR_SERVICE_NAME">#AuthenticateInterceptor</service-property>
        </service>
        
        <service template="Template.WebServer.Servlet#RequestProcessCheckInterceptor">
            <attribute name="Threshold">
                60000=RPC__00003,10000
                300000=RPC__00004,-1
            </attribute>
        </service>
        
        <service template="Template.WebServer.Servlet#SetCharacterEncodingInterceptor">
            <attribute name="CharacterEncoding">${WebServer.Servlet.CHARACTER_ENCODING}</attribute>
        </service>
        
        <service template="Template.WebServer.Servlet#ThreadContextInitializeInterceptor">
            <service-property name="Template.Service.AOP.Servlet.Interceptor.ThreadContextInitialize.SEQUENCE_SERVICE_NAME">WebServer.Resource#Sequence</service-property>
        </service>
        
        <service template="Template.WebServer.Servlet#ServletRequestInitializeInterceptor">
            <attribute name="RequestAttributeServiceNames">
                MessageRecordFactory=WebServer.Log#MessageRecordFactory
                Logger=WebServer.Log#Logger
                Context=WebServer.Log#Context
            </attribute>
        </service>
        
        <service template="Template.WebServer.Servlet#AccessJournalInterceptor"/>
        
        <service template="Template.WebServer.Servlet#HttpServletResponseSetInterceptor"/>
        
        <service template="Template.WebServer.Servlet#HttpServletResponseDeflateInterceptor"/>
        
        <service name="PreExceptionHandlingInterceptor"
                 template="Template.WebServer.Servlet#ExceptionHandlingInterceptor">
            <attribute name="ExceptionAndHandlerMapping">
                jp.ossc.nimbus.service.aop.interceptor.servlet.HttpServletRequestCheckException=#HttpServletRequestCheckExceptionHandler
            </attribute>
            <attribute name="DefaultExceptionHandlerServiceName">#PreUnexpectedExceptionHandler</attribute>
            <depends>
                <service name="HttpServletRequestCheckExceptionHandler"
                         template="Template.WebServer.Servlet#ExceptionHandler">
                    <attribute name="LogMessageCode">LOG_MSG_002</attribute>
                    <attribute name="HttpResponseStatus"><static-field-ref code="javax.servlet.http.HttpServletResponse" name="SC_BAD_REQUEST"/></attribute>
                </service>
            </depends>
            <depends>
                <service name="PreUnexpectedExceptionHandler"
                         template="Template.WebServer.Servlet#ExceptionHandler">
                    <attribute name="LogMessageCode">LOG_MSG_003</attribute>
                    <attribute name="ForwardPath">/WEB-INF/jsp/unexpected_error.jsp</attribute>
                </service>
            </depends>
        </service>
        
        <service template="Template.WebServer.Servlet#HttpServletRequestCheckInterceptor">
            <attribute name="MaxContentLength">1048576</attribute>
            <attribute name="ValidContentTypes">application/json; charset=utf-8</attribute>
            <attribute name="ValidMethods">POST</attribute>
        </service>
        
        <service template="Template.WebServer.Servlet#BeanFlowSelectCheckInterceptor"/>
        
        <service template="Template.WebServer.Servlet#BeanFlowSelector"/>
        
        <service template="Template.WebServer.Servlet#HttpServletRequestMetricsInterceptor">
            <service-property name="Template.Service.AOP.Servlet.Interceptor.HttpServletRequestMetrics.PERFORMANCE_RECORDER_SERVICE_NAME">WebServer.Performance.Action#PerformanceRecorder</service-property>
        </service>
        
        <service template="Template.WebServer.Servlet#StreamExchangeInterceptor">
            <service-property name="Template.Service.AOP.Servlet.Interceptor.StreamExchange.REQ_CONVERTER_SERVICE_NAME">#DataSetJSONConverter</service-property>
            <service-property name="Template.Service.AOP.Servlet.Interceptor.StreamExchange.RES_CONVERTER_SERVICE_NAME">#DataSetJSONConverter</service-property>
        </service>
        
        <service name="DataSetJSONConverter"
                 code="jp.ossc.nimbus.util.converter.DataSetJSONConverter">
            <attribute name="OutputSchema">false</attribute>
            <attribute name="IgnoreUnknownElement">true</attribute>
        </service>
        
        <service name="ExceptionHandlingInterceptor"
                 template="Template.WebServer.Servlet#ExceptionHandlingInterceptor">
            <attribute name="ExceptionAndHandlerMapping">
                jp.ossc.nimbus.service.aop.interceptor.servlet.BlockadeException=#BlockadeExceptionHandler
            </attribute>
            <attribute name="DefaultExceptionHandlerServiceName">#UnexpectedExceptionHandler</attribute>
            <depends>
                <service name="BlockadeExceptionHandler"
                         template="Template.WebServer.Servlet#ExceptionHandler">
                    <attribute name="ResponseObject">
                        <object code="jp.ossc.nimbus.beans.dataset.DataSet">
                            <attribute name="HeaderSchema(Common)">
                                :resultCode,java.lang.String
                                :message,java.lang.String
                            </attribute>
                            <attribute name="Header(Common).resultCode">3000</attribute>
                        </object>
                    </attribute>
                    <attribute name="ExceptionAndResponseObjectPropertyMapping">message=Header(Common).message</attribute>
                </service>
            </depends>
            <depends>
                <service name="UnexpectedExceptionHandler"
                         template="Template.WebServer.Servlet#ExceptionHandler">
                    <attribute name="LogMessageCode">LOG_MSG_003</attribute>
                    <attribute name="ResponseObject">
                        <object code="jp.ossc.nimbus.beans.dataset.DataSet">
                            <attribute name="HeaderSchema(Common)">
                                :resultCode,java.lang.String
                                :message,java.lang.String
                            </attribute>
                            <attribute name="Header(Common).resultCode">9999</attribute>
                            <attribute name="Header(Common).message">
                                <object code="java.lang.String">
                                    <constructor>
                                        <invoke name="findMessage">
                                            <target><service-ref>WebServer.Log#MessageRecordFactory</service-ref></target>
                                            <argument>9999</argument>
                                        </invoke>
                                    </constructor>
                                </object>
                            </attribute>
                        </object>
                    </attribute>
                </service>
            </depends>
        </service>
        
        <service template="Template.WebServer.Servlet#BlockadeInterceptor">
            <attribute name="BlockadeCodeMasterKey">codemaster/blockade</attribute>
            <attribute name="SpecialUserCodeMasterKey">codemaster/specialUser</attribute>
            <attribute name="SpecialUserMapping">Header(Login).id=id</attribute>
            <attribute name="SessionObjectAttributeName">UserProfile.authenticatedInfo</attribute>
            <attribute name="SessionSpecialUserMapping">id=id</attribute>
        </service>
        
        <service template="Template.WebServer.Servlet#AuthenticateInterceptor">
            <service-property name="Template.Service.AOP.Servlet.Interceptor.Authenticate.AUTHENTICATE_STORE_SERVICE_NAME">#AuthenticateStore</service-property>
            <attribute name="LoginPath">/login.bf</attribute>
            <attribute name="AuthenticatedInfoAttributeName">UserProfile</attribute>
            <attribute name="AuthenticatedInfoMapping">
                Header(Common).id=id
                Header(Common).sessionId=sessionId
            </attribute>
        </service>
        
        <service name="AuthenticateStore"
                 template="Template.WebServer.Servlet#SharedContextAuthenticateStore">
            <service-property name="Template.Service.AOP.Servlet.Interceptor.SharedContextAuthenticateStore.SHARED_CONTEXT_SERVICE_NAME">WebServer.SharedContext#UserProfileContext</service-property>
            <attribute name="KeyPropertyOnCreate">id</attribute>
            <attribute name="KeyPropertyOnActivate">Header(Common).id</attribute>
        </service>
        
    </manager>
    
</server>