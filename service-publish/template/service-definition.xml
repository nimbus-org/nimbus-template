<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server PUBLIC
  "-//Nimbus//DTD Nimbus 1.0//JA"
  "http://nimbus.sourceforge.jp/dtd/nimbus-service_1_0.dtd">

<server>
    
    <default-log>
        <debug output="false"/>
        <information output="false"/>
        <warning output="true"/>
        <error output="true"/>
        <fatal output="true"/>
    </default-log>

    <manager name="Template.Service.Publish.Local">


        <service name="ConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.local.ConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.Local.ASYNCH_SEND_QUEUE_FAC_SERVICE_NAME">#AsynchSendQueueFactory</service-property>

<ifdef name="Template.Service.Publish.Local.ASYNCH_SEND_QUEUE_FAC_SERVICE_NAME">
            <attribute name="AsynchSendThreadSize">1</attribute>
            <attribute name="AsynchSendQueueFactoryServiceName">${Template.Service.Publish.Local.ASYNCH_SEND_QUEUE_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Local.ASYNCH_SEND_QUEUE_FAC_SERVICE_NAME}</depends>
</ifdef>
        </service>

        <service name="AsynchSendQueueFactory"
                 code="jp.ossc.nimbus.service.queue.DefaultQueueService"
                 instance="template"/>

    </manager>

    <manager name="Template.Service.Publish.TCP">

        <service name="ConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.tcp.ConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.TCP.ASYNCH_SEND_QUEUE_SERVICE_NAME">#AsynchSendQueue</service-property>

<ifdef name="Template.Service.Publish.TCP.ASYNCH_SEND_QUEUE_SERVICE_NAME">
            <attribute name="AsynchSendThreadSize">1</attribute>
            <attribute name="AsynchSendQueueServiceName">${Template.Service.Publish.TCP.ASYNCH_SEND_QUEUE_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.TCP.ASYNCH_SEND_QUEUE_SERVICE_NAME}</depends>
</ifdef>
        </service>

        <service name="AsynchSendQueue"
                 code="jp.ossc.nimbus.service.queue.DefaultQueueService"
                 instance="template"/>

    </manager>

    <manager name="Template.Service.Publish.UDP">

        <service name="ConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.udp.ConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.UDP.ASYNCH_SEND_QUEUE_SERVICE_NAME">#AsynchSendQueue</service-property>

<ifdef name="Template.Service.Publish.UDP.ASYNCH_SEND_QUEUE_SERVICE_NAME">
            <attribute name="AsynchSendThreadSize">1</attribute>
            <attribute name="AsynchSendQueueServiceName">${Template.Service.Publish.UDP.ASYNCH_SEND_QUEUE_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.UDP.ASYNCH_SEND_QUEUE_SERVICE_NAME}</depends>
</ifdef>
        </service>

        <service name="AsynchSendQueue"
                 code="jp.ossc.nimbus.service.queue.DefaultQueueService"
                 instance="template"/>

    </manager>

    <manager name="Template.Service.Publish.Multicast">

        <service name="ConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.udp.ConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.Multicast.ASYNCH_SEND_QUEUE_SERVICE_NAME">#AsynchSendQueue</service-property>

            <attribute name="MulticastGroupAddress">239.0.0.1</attribute>
            <attribute name="MulticastPort">10000</attribute>
            <attribute name="TimeToLive">1</attribute>
<ifdef name="Template.Service.Publish.Multicast.ASYNCH_SEND_QUEUE_SERVICE_NAME">
            <attribute name="AsynchSendThreadSize">1</attribute>
            <attribute name="AsynchSendQueueServiceName">${Template.Service.Publish.Multicast.ASYNCH_SEND_QUEUE_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Multicast.ASYNCH_SEND_QUEUE_SERVICE_NAME}</depends>
</ifdef>
        </service>

        <service name="AsynchSendQueue"
                 code="jp.ossc.nimbus.service.queue.DefaultQueueService"
                 instance="template"/>

    </manager>

    <manager name="Template.Service.Publish.Dist">

        <service name="DistributedConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.DistributedConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.Dist.CONNECTION_FAC_FAC_SERVICE_NAME" extends="true">#ConnectionFactoryFactory</service-property>

            <attribute name="DistributedSize">2</attribute>
<ifdef name="Template.Service.Publish.Dist.CONNECTION_FAC_FAC_SERVICE_NAME">
            <attribute name="ConnectionFactoryFactoryServiceName">${Template.Service.Publish.Dist.CONNECTION_FAC_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Dist.CONNECTION_FAC_FAC_SERVICE_NAME}</depends>
</ifdef>
        </service>

    </manager>

    <manager name="Template.Service.Publish.Cluster">

        <service name="ClusterConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.ClusterConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.Cluster.CLUSTER_SERVICE_NAME" extends="true">#Cluster</service-property>
            <service-property name="Template.Service.Publish.Cluster.CLIENT_CONNECTION_FAC_SERVICE_NAME" extends="true">#ConnectionFactory</service-property>

<ifdef name="Template.Service.Publish.Cluster.CLUSTER_SERVICE_NAME">
            <attribute name="ClusterServiceName">${Template.Service.Publish.Cluster.CLUSTER_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Cluster.CLUSTER_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.Service.Publish.Cluster.CLIENT_CONNECTION_FAC_SERVICE_NAME">
            <attribute name="ClientConnectionFactoryServiceName">${Template.Service.Publish.Cluster.CLIENT_CONNECTION_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Cluster.CLIENT_CONNECTION_FAC_SERVICE_NAME}</depends>
</ifdef>
            <attribute name="FlexibleConnect">true</attribute>
        </service>

        <service name="ClusterClientConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.ClusterClientConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.Cluster.CLIENT_CLUSTER_SERVICE_NAME" extends="true">#Cluster</service-property>

<ifdef name="Template.Service.Publish.Cluster.CLIENT_CLUSTER_SERVICE_NAME">
            <attribute name="ClusterServiceName">${Template.Service.Publish.Cluster.CLIENT_CLUSTER_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Cluster.CLIENT_CLUSTER_SERVICE_NAME}</depends>
</ifdef>
            <attribute name="FlexibleConnect">true</attribute>
        </service>

    </manager>

    <manager name="Template.Service.Publish.ThinOut">

        <service name="ThinOutServerConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.ThinOutServerConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.ThinOut.SERVER_CONNECTION_FAC_SERVICE_NAME" extends="true">#ConnectionFactory</service-property>
            <service-property name="Template.Service.Publish.ThinOut.THIN_OUT_FILTER_SERVICE_NAMES" extends="true">
                #TimeIntervalThinOutFilter
            </service-property>

<ifdef name="Template.Service.Publish.ThinOut.SERVER_CONNECTION_FAC_SERVICE_NAME">
            <attribute name="ServerConnectionFactoryServiceName">${Template.Service.Publish.ThinOut.SERVER_CONNECTION_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.ThinOut.SERVER_CONNECTION_FAC_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.Service.Publish.ThinOut.THIN_OUT_FILTER_SERVICE_NAMES">
            <attribute name="ThinOutFilterServiceNames">${Template.Service.Publish.ThinOut.THIN_OUT_FILTER_SERVICE_NAMES}</attribute>
            <depends>${Template.Service.Publish.ThinOut.THIN_OUT_FILTER_SERVICE_NAMES}</depends>
</ifdef>
            <attribute name="ThinOutTimeoutCheckInterval">500</attribute>
            <attribute name="ThinOutTimeout">1000</attribute>
        </service>

        <service name="ThinOutClientConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.ThinOutClientConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.ThinOut.CLIENT_CONNECTION_FAC_SERVICE_NAME" extends="true">#ClusterClientConnectionFactory</service-property>
            <service-property name="Template.Service.Publish.ThinOut.THIN_OUT_FILTER_SERVICE_NAMES" extends="true">
                #TimeIntervalThinOutFilter
            </service-property>

<ifdef name="Template.Service.Publish.ThinOut.CLIENT_CONNECTION_FAC_SERVICE_NAME">
            <attribute name="ClientConnectionFactoryServiceName">${Template.Service.Publish.ThinOut.CLIENT_CONNECTION_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.ThinOut.CLIENT_CONNECTION_FAC_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.Service.Publish.ThinOut.THIN_OUT_FILTER_SERVICE_NAMES">
            <attribute name="ThinOutFilterServiceNames">${Template.Service.Publish.ThinOut.THIN_OUT_FILTER_SERVICE_NAMES}</attribute>
            <depends>${Template.Service.Publish.ThinOut.THIN_OUT_FILTER_SERVICE_NAMES}</depends>
</ifdef>
            <attribute name="ThinOutTimeoutCheckInterval">500</attribute>
            <attribute name="ThinOutTimeout">1000</attribute>
        </service>

        <service name="TimeIntervalThinOutFilter"
                 code="jp.ossc.nimbus.service.publish.TimeIntervalThinOutFilterService"
                 instance="template"/>

    </manager>

    <manager name="Template.Service.Publish.Receiver">

        <service name="MessageReceiver"
                 code="jp.ossc.nimbus.service.publish.MessageReceiverService"
                 instance="template">

            <service-property name="Template.Service.Publish.Receiver.CLIENT_CONNECTION_FAC_SERVICE_NAME" extends="true">#ClusterClientConnectionFactory</service-property>
            <service-property name="Template.Service.Publish.Receiver.MESSAGE_QUEUE_FAC_SERVICE_NAME">#MessageQueueFactory</service-property>
            <service-property name="Template.Service.Publish.Receiver.MESSAGE_LISTENER_QUEUE_FAC_SERVICE_NAME">#MessageListenerQueueFactory</service-property>

<ifdef name="Template.Service.Publish.Receiver.CLIENT_CONNECTION_FAC_SERVICE_NAME">
            <attribute name="ClientConnectionFactoryServiceName">${Template.Service.Publish.Receiver.CLIENT_CONNECTION_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Receiver.CLIENT_CONNECTION_FAC_SERVICE_NAME}</depends>
</ifdef>

<ifdef name="Template.Service.Publish.Receiver.MESSAGE_QUEUE_FAC_SERVICE_NAME">
            <attribute name="MessageQueueFactoryServiceName">${Template.Service.Publish.Receiver.MESSAGE_QUEUE_FAC_SERVICE_NAME}</attribute>
            <attribute name="MessageQueueDistributedSize">2</attribute>
            <depends>${Template.Service.Publish.Receiver.MESSAGE_QUEUE_FAC_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.Service.Publish.Receiver.MESSAGE_LISTENER_QUEUE_FAC_SERVICE_NAME">
            <attribute name="MessageListenerQueueFactoryServiceName">${Template.Service.Publish.Receiver.MESSAGE_LISTENER_QUEUE_FAC_SERVICE_NAME}</attribute>
            <attribute name="MessageListenerQueueDistributedSize">2</attribute>
            <depends>${Template.Service.Publish.Receiver.MESSAGE_LISTENER_QUEUE_FAC_SERVICE_NAME}</depends>
</ifdef>
        </service>

        <service name="MessageQueueFactory"
                 code="jp.ossc.nimbus.service.queue.DefaultQueueService"
                 instance="template"/>

        <service name="MessageListenerQueueFactory"
                 code="jp.ossc.nimbus.service.queue.DefaultQueueService"
                 instance="template"/>

    </manager>

    <manager name="Template.Service.Publish.Forward">

        <service name="MessageForward"
                 code="jp.ossc.nimbus.service.publish.MessageForwardingService"
                 instance="template">

            <service-property name="Template.Service.Publish.Forward.CLIENT_CONNECTION_FAC_SERVICE_NAME" extends="true">#ClusterClientConnectionFactory</service-property>
            <service-property name="Template.Service.Publish.Forward.SERVER_CONNECTION_FAC_SERVICE_NAME" extends="true">#ConnectionFactory</service-property>
            <service-property name="Template.Service.Publish.Forward.MESSAGE_QUEUE_FAC_SERVICE_NAME">#MessageQueueFactory</service-property>
            <service-property name="Template.Service.Publish.Forward.MESSAGE_LISTENER_QUEUE_FAC_SERVICE_NAME">#MessageListenerQueueFactory</service-property>

<ifdef name="Template.Service.Publish.Forward.CLIENT_CONNECTION_FAC_SERVICE_NAME">
            <attribute name="ClientConnectionFactoryServiceName">${Template.Service.Publish.Forward.CLIENT_CONNECTION_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Forward.CLIENT_CONNECTION_FAC_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.Service.Publish.Forward.SERVER_CONNECTION_FAC_SERVICE_NAME">
            <attribute name="ServerConnectionFactoryServiceName">${Template.Service.Publish.Forward.SERVER_CONNECTION_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Forward.SERVER_CONNECTION_FAC_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.Service.Publish.Forward.MESSAGE_QUEUE_FAC_SERVICE_NAME">
            <attribute name="MessageQueueFactoryServiceName">${Template.Service.Publish.Forward.MESSAGE_QUEUE_FAC_SERVICE_NAME}</attribute>
            <attribute name="MessageQueueDistributedSize">2</attribute>
            <depends>${Template.Service.Publish.Forward.MESSAGE_QUEUE_FAC_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.Service.Publish.Forward.MESSAGE_LISTENER_QUEUE_FAC_SERVICE_NAME">
            <attribute name="MessageListenerQueueFactoryServiceName">${Template.Service.Publish.Forward.MESSAGE_LISTENER_QUEUE_FAC_SERVICE_NAME}</attribute>
            <attribute name="MessageListenerQueueDistributedSize">2</attribute>
            <depends>${Template.Service.Publish.Forward.MESSAGE_LISTENER_QUEUE_FAC_SERVICE_NAME}</depends>
</ifdef>
        </service>

        <service name="MessageQueueFactory"
                 code="jp.ossc.nimbus.service.queue.DefaultQueueService"
                 instance="template"/>

        <service name="MessageListenerQueueFactory"
                 code="jp.ossc.nimbus.service.queue.DefaultQueueService"
                 instance="template"/>

    </manager>

    <manager name="Template.Service.Publish.Request">

        <service name="RequestConnectionFactory"
                 code="jp.ossc.nimbus.service.publish.RequestConnectionFactoryService"
                 instance="template">

            <service-property name="Template.Service.Publish.Request.SERVER_CONNECTION_FAC_SERVICE_NAME" extends="true">#ConnectionFactory</service-property>
            <service-property name="Template.Service.Publish.Request.MESSAGE_RECEIVER_SERVICE_NAME" extends="true">#MessageReceiver</service-property>

<ifdef name="Template.Service.Publish.Request.SERVER_CONNECTION_FAC_SERVICE_NAME">
            <attribute name="ServerConnectionFactoryServiceName">${Template.Service.Publish.Request.SERVER_CONNECTION_FAC_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Request.SERVER_CONNECTION_FAC_SERVICE_NAME}</depends>
</ifdef>
<ifdef name="Template.Service.Publish.Request.MESSAGE_RECEIVER_SERVICE_NAME">
            <attribute name="MessageReceiverServiceName">${Template.Service.Publish.Request.MESSAGE_RECEIVER_SERVICE_NAME}</attribute>
            <depends>${Template.Service.Publish.Request.MESSAGE_RECEIVER_SERVICE_NAME}</depends>
</ifdef>
        </service>

    </manager>

</server>